{"version":3,"file":"react-netlify-identity.cjs.development.js","sources":["../src/token.ts","../src/runRoutes.tsx","../src/index.tsx"],"sourcesContent":["export type TokenParam = {\n  token: string | undefined;\n  type: 'invite' | 'recovery' | 'email_change' | undefined;\n  error: 'access_denied' | undefined;\n  status: 403 | undefined;\n};\n\nexport const defaultParam: TokenParam = {\n  token: undefined,\n  type: undefined,\n  error: undefined,\n  status: undefined,\n};\n","import GoTrue, { User } from 'gotrue-js';\nimport { TokenParam, defaultParam } from './token';\n\n/**\n * This code runs on every rerender so keep it light\n * keep checking the current route and do logic based on the route\n * as dictated by netlify identity's communication with us via hashes\n */\n\nconst routes = /(confirmation|invite|recovery|email_change|access)_token=([^&]+)/;\nconst errorRoute = /error=access_denied&error_description=403/;\n\nconst reduceHashToKeyValue = (hash: string): { [key: string]: string } =>\n  hash.split('&').reduce((carry, pair) => {\n    const [key, value] = pair.split('=');\n\n    return { ...carry, [key]: value };\n  }, {});\n\nconst hashReplace = /^#\\/?/;\n\nexport function runRoutes(\n  gotrue: GoTrue,\n  setUser: (value: User) => User | undefined,\n  remember = true\n): TokenParam {\n  // early terminate if no hash\n  // also accounts for document.cookie further down\n  if (!document?.location?.hash) {\n    return defaultParam;\n  }\n\n  const hash = document.location.hash.replace(hashReplace, '');\n\n  try {\n    history.pushState(\n      '',\n      document.title,\n      window.location.pathname + window.location.search\n    );\n  } catch (_) {\n    window.location.href.substr(0, window.location.href.indexOf('#'));\n  }\n\n  // earliest possible bail on any match\n  if (hash.match(errorRoute)) {\n    return {\n      ...defaultParam,\n      error: 'access_denied',\n      status: 403,\n    };\n  }\n\n  const matchesActionHashes = hash.match(routes);\n\n  if (matchesActionHashes) {\n    const params = reduceHashToKeyValue(hash);\n\n    if (params.confirmation_token) {\n      gotrue\n        .confirm(params.confirmation_token, remember)\n        .then(setUser)\n        .catch(console.error);\n\n      // dont notify dev as this package does not export its own method for this\n      return defaultParam;\n    }\n\n    if (params.access_token) {\n      document.cookie = `nf_jwt=${params.access_token}`;\n\n      gotrue\n        .createUser(params, remember)\n        .then(setUser)\n        .catch(console.error);\n\n      // also dont notify dev here for the same reasons as above\n      return defaultParam;\n    }\n\n    // pass responsibility to dev in all other cases\n    return {\n      ...defaultParam,\n      type: matchesActionHashes[1] as TokenParam['type'],\n      token: matchesActionHashes[2],\n    };\n  }\n\n  return defaultParam;\n}\n","import React, {\n  useState,\n  useMemo,\n  useEffect,\n  createContext,\n  useContext,\n  useCallback,\n  // types\n  ReactNode,\n} from 'react';\n\nimport GoTrue, {\n  User as GoTrueUser,\n  Settings as GoTrueSettings,\n} from 'gotrue-js';\nimport { runRoutes } from './runRoutes';\nimport { TokenParam, defaultParam } from './token';\n\ntype authChangeParam = (user?: User) => string | void;\n\nexport type Settings = GoTrueSettings;\nexport type User = GoTrueUser;\ntype Provider = 'bitbucket' | 'github' | 'gitlab' | 'google';\n\nconst defaultSettings = {\n  autoconfirm: false,\n  disable_signup: false,\n  external: {\n    bitbucket: false,\n    email: true,\n    facebook: false,\n    github: false,\n    gitlab: false,\n    google: false,\n  },\n};\n\nconst errors = {\n  noUserFound: 'No current user found - are you logged in?',\n  noUserTokenFound: 'no user token found',\n  tokenMissingOrInvalid: 'either no token found or invalid for this purpose',\n};\n\nexport type ReactNetlifyIdentityAPI = {\n  user: User | undefined;\n  /** not meant for normal use! you should mostly use one of the other exported methods to update the user instance */\n  setUser: (_user: GoTrueUser | undefined) => GoTrueUser | undefined;\n  isConfirmedUser: boolean;\n  isLoggedIn: boolean;\n  signupUser: (\n    email: string,\n    password: string,\n    data: Object,\n    directLogin?: boolean\n  ) => Promise<User | undefined>;\n  loginUser: (\n    email: string,\n    password: string,\n    remember?: boolean\n  ) => Promise<User | undefined>;\n  logoutUser: () => Promise<User | undefined>;\n  requestPasswordRecovery: (email: string) => Promise<void>;\n  recoverAccount: (remember?: boolean) => Promise<User | undefined>;\n  updateUser: (fields: object) => Promise<User | undefined>;\n  getFreshJWT: () => Promise<string> | undefined;\n  authedFetch: {\n    get: (endpoint: string, obj?: RequestInit) => Promise<any>;\n    post: (endpoint: string, obj?: RequestInit) => Promise<any>;\n    put: (endpoint: string, obj?: RequestInit) => Promise<any>;\n    delete: (endpoint: string, obj?: RequestInit) => Promise<any>;\n  };\n  _goTrueInstance: GoTrue;\n  _url: string;\n  loginProvider: (provider: Provider) => void;\n  acceptInviteExternalUrl: (\n    provider: Provider,\n    autoRedirect: boolean\n  ) => string | undefined;\n  settings: Settings;\n  param: TokenParam;\n  verifyToken: () => Promise<User | undefined>;\n};\n\nconst [_useIdentityContext, _IdentityCtxProvider] = createCtx<\n  ReactNetlifyIdentityAPI\n>();\nexport const useIdentityContext = _useIdentityContext; // we dont want to expose _IdentityCtxProvider\n\n/** most people should use this provider directly */\nexport function IdentityContextProvider({\n  url,\n  children,\n  onAuthChange = () => {},\n}: {\n  url: string;\n  children: ReactNode;\n  onAuthChange?: authChangeParam;\n}) {\n  /******** SETUP */\n  if (!url || !validateUrl(url)) {\n    // just a safety check in case a JS user tries to skip this\n    throw new Error(\n      'invalid netlify instance URL: ' +\n        url +\n        '. Please check the docs for proper usage or file an issue.'\n    );\n  }\n  const identity = useNetlifyIdentity(url, onAuthChange);\n  return (\n    <_IdentityCtxProvider value={identity}>{children}</_IdentityCtxProvider>\n  );\n}\n\n/** some people may want to use this as a hook and bring their own contexts */\nexport function useNetlifyIdentity(\n  url: string,\n  onAuthChange: authChangeParam = () => {},\n  enableRunRoutes: boolean = true\n): ReactNetlifyIdentityAPI {\n  const goTrueInstance = useMemo(\n    () =>\n      new GoTrue({\n        APIUrl: `${url}/.netlify/identity`,\n        setCookie: true,\n      }),\n    [url]\n  );\n\n  /******* STATE and EFFECTS */\n\n  const [user, setUser] = useState<User | undefined>(\n    goTrueInstance.currentUser() || undefined\n  );\n\n  const _setUser = useCallback(\n    (_user: User | undefined) => {\n      setUser(_user);\n      onAuthChange(_user); // if someone's subscribed to auth changes, let 'em know\n      return _user; // so that we can continue chaining\n    },\n    [onAuthChange]\n  );\n\n  const [param, setParam] = useState<TokenParam>(defaultParam);\n\n  useEffect(() => {\n    if (enableRunRoutes) {\n      const param = runRoutes(goTrueInstance, _setUser);\n\n      if (param.token || param.error) {\n        setParam(param);\n      }\n    }\n  }, []);\n\n  const [settings, setSettings] = useState<Settings>(defaultSettings);\n\n  useEffect(() => {\n    goTrueInstance.settings\n      .bind(goTrueInstance)()\n      .then(x => setSettings(x));\n  }, []);\n\n  /******* OPERATIONS */\n  // make sure the Registration preferences under Identity settings in your Netlify dashboard are set to Open.\n  // https://react-netlify-identity.netlify.com/login#access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTY0ODY3MjEsInN1YiI6ImNiZjY5MTZlLTNlZGYtNGFkNS1iOTYzLTQ4ZTY2NDcyMDkxNyIsImVtYWlsIjoic2hhd250aGUxQGdtYWlsLmNvbSIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImdpdGh1YiJ9LCJ1c2VyX21ldGFkYXRhIjp7ImF2YXRhcl91cmwiOiJodHRwczovL2F2YXRhcnMxLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzY3NjQ5NTc_dj00IiwiZnVsbF9uYW1lIjoic3d5eCJ9fQ.E8RrnuCcqq-mLi1_Q5WHJ-9THIdQ3ha1mePBKGhudM0&expires_in=3600&refresh_token=OyA_EdRc7WOIVhY7RiRw5w&token_type=bearer\n  /******* external oauth */\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/index.js#L71\n   */\n  const loginProvider = useCallback(\n    (provider: Provider) => {\n      const url = goTrueInstance.loginExternalUrl(provider);\n      window.location.href = url;\n    },\n    [goTrueInstance]\n  );\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/index.js#L92\n   */\n  const acceptInviteExternalUrl = useCallback(\n    (provider: Provider, autoRedirect: boolean = true) => {\n      if (!param.token || param.type !== 'invite') {\n        console.error(errors.tokenMissingOrInvalid);\n        return;\n      }\n\n      const url = goTrueInstance.acceptInviteExternalUrl(provider, param.token);\n      // clean up consumed token\n      setParam(defaultParam);\n\n      if (autoRedirect) {\n        window.location.href = url;\n        return;\n      }\n\n      return url;\n    },\n    [goTrueInstance, param]\n  );\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/index.js#L123\n   */\n  const verifyToken = useCallback(() => {\n    if (!param.type || !param.token) {\n      return Promise.reject(errors.tokenMissingOrInvalid);\n    }\n\n    return goTrueInstance.verify(param.type, param.token).then(user => {\n      // cleanup consumed token\n      setParam(defaultParam);\n\n      return user;\n    });\n  }, [goTrueInstance, param]);\n\n  /******* email auth */\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/index.js#L50\n   */\n  const signupUser = useCallback(\n    (\n      email: string,\n      password: string,\n      data: Object,\n      directLogin: boolean = true\n    ) =>\n      goTrueInstance.signup(email, password, data).then(user => {\n        if (directLogin) {\n          return _setUser(user);\n        }\n\n        return user;\n      }),\n    [goTrueInstance, _setUser]\n  );\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/index.js#L57\n   */\n  const loginUser = useCallback(\n    (email: string, password: string, remember: boolean = true) =>\n      goTrueInstance.login(email, password, remember).then(_setUser),\n    [goTrueInstance, _setUser]\n  );\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/index.js#L80\n   */\n  const requestPasswordRecovery = useCallback(\n    (email: string) => goTrueInstance.requestPasswordRecovery(email),\n    [goTrueInstance]\n  );\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/index.js#L87\n   */\n  const recoverAccount = useCallback(\n    (remember?: boolean) => {\n      if (!param.token || param.type !== 'recovery') {\n        return Promise.reject(errors.tokenMissingOrInvalid);\n      }\n\n      return goTrueInstance\n        .recover(param.token, remember)\n        .then(user => {\n          return _setUser(user);\n        })\n        .finally(() => {\n          // clean up consumed token\n          setParam(defaultParam);\n        });\n    },\n    [goTrueInstance, _setUser, param]\n  );\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/user.js#L54\n   */\n  const updateUser = useCallback(\n    (fields: object) => {\n      if (!user) {\n        return Promise.reject(errors.noUserFound);\n      }\n\n      return user!\n        .update(fields) // e.g. { email: \"example@example.com\", password: \"password\" }\n        .then(_setUser);\n    },\n    [user]\n  );\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/user.js#L63\n   */\n  const getFreshJWT = useCallback(() => {\n    if (!user) {\n      return Promise.reject(errors.noUserFound);\n    }\n\n    return user.jwt();\n  }, [user]);\n\n  /**\n   * @see https://github.com/netlify/gotrue-js/blob/master/src/user.js#L71\n   */\n  const logoutUser = useCallback(() => {\n    if (!user) {\n      return Promise.reject(errors.noUserFound);\n    }\n\n    return user.logout().then(() => _setUser(undefined));\n  }, [user]);\n\n  const genericAuthedFetch = (method: RequestInit['method']) => (\n    endpoint: string,\n    options: RequestInit = {}\n  ) => {\n    if (!user?.token?.access_token) {\n      return Promise.reject(errors.noUserTokenFound);\n    }\n\n    const defaultObj = {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + user.token.access_token,\n      },\n    };\n    const finalObj = Object.assign(defaultObj, { method }, options);\n\n    return fetch(endpoint, finalObj).then(res =>\n      finalObj.headers['Content-Type'] === 'application/json' ? res.json() : res\n    );\n  };\n\n  const authedFetch = {\n    get: genericAuthedFetch('GET'),\n    post: genericAuthedFetch('POST'),\n    put: genericAuthedFetch('PUT'),\n    delete: genericAuthedFetch('DELETE'),\n  };\n\n  /******* hook API */\n  return {\n    user,\n    /** not meant for normal use! you should mostly use one of the other exported methods to update the user instance */\n    setUser: _setUser,\n    isConfirmedUser: !!(user && user.confirmed_at),\n    isLoggedIn: !!user,\n    signupUser,\n    loginUser,\n    logoutUser,\n    requestPasswordRecovery,\n    recoverAccount,\n    updateUser,\n    getFreshJWT,\n    authedFetch,\n    _goTrueInstance: goTrueInstance,\n    _url: url,\n    loginProvider,\n    acceptInviteExternalUrl,\n    settings,\n    param,\n    verifyToken,\n  };\n}\n\n/**\n *\n *\n * Utils\n *\n */\n\nfunction validateUrl(value: string) {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n    value\n  );\n}\n\n// lazy initialize contexts without providing a Nullable type upfront\nfunction createCtx<A>() {\n  const ctx = createContext<A | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error('useCtx must be inside a Provider with a value');\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\n// // Deprecated for now\n// interface NIProps {\n//   children: any\n//   url: string\n//   onAuthChange?: authChangeParam\n// }\n// export default function NetlifyIdentity({ children, url, onAuthChange }: NIProps) {\n//   return children(useNetlifyIdentity(url, onAuthChange))\n// }\n"],"names":["defaultParam","token","undefined","type","error","status","routes","errorRoute","reduceHashToKeyValue","hash","split","reduce","carry","pair","key","value","hashReplace","runRoutes","gotrue","setUser","remember","document","location","replace","history","pushState","title","window","pathname","search","_","href","substr","indexOf","match","matchesActionHashes","params","confirmation_token","confirm","then","console","access_token","cookie","createUser","defaultSettings","autoconfirm","disable_signup","external","bitbucket","email","facebook","github","gitlab","google","errors","noUserFound","noUserTokenFound","tokenMissingOrInvalid","createCtx","_useIdentityContext","_IdentityCtxProvider","useIdentityContext","IdentityContextProvider","url","children","onAuthChange","validateUrl","Error","identity","useNetlifyIdentity","React","enableRunRoutes","goTrueInstance","useMemo","GoTrue","APIUrl","setCookie","useState","currentUser","user","_setUser","useCallback","_user","param","setParam","useEffect","settings","setSettings","bind","x","loginProvider","provider","loginExternalUrl","acceptInviteExternalUrl","autoRedirect","verifyToken","Promise","reject","verify","signupUser","password","data","directLogin","signup","loginUser","login","requestPasswordRecovery","recoverAccount","recover","updateUser","fields","update","getFreshJWT","jwt","logoutUser","logout","genericAuthedFetch","method","endpoint","options","defaultObj","headers","Accept","Authorization","finalObj","Object","assign","fetch","res","json","authedFetch","get","post","put","isConfirmedUser","confirmed_at","isLoggedIn","_goTrueInstance","_url","test","ctx","createContext","useCtx","c","useContext","Provider"],"mappings":"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"}